<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:jaxws="http://cxf.apache.org/jaxws"
	xsi:schemaLocation="http://cxf.apache.org/jaxws http://cxf.apache.org/schemas/jaxws.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.2.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.2.xsd">
	<!-- 读取数据库连接配置文件 -->
	<context:property-placeholder
		location="classpath:db.properties" />
	<!-- 连接池 -->
	<bean name="dataSource"
		class="com.mchange.v2.c3p0.ComboPooledDataSource">
		<property name="jdbcUrl" value="${jdbc.jdbcUrl}"></property>
		<property name="driverClass" value="${jdbc.driverClass}"></property>
		<property name="user" value="${jdbc.user}"></property>
		<property name="password" value="${jdbc.password}"></property>
		<!--连接池中保留的最小连接数。 -->
		<property name="minPoolSize" value="5" />
		<!--连接池中保留的最大连接数。Default: 15 -->
		<property name="maxPoolSize" value="15" />
		<!--初始化时获取的连接数，取值应在minPoolSize与maxPoolSize之间。Default: 3 -->
		<property name="initialPoolSize" value="5" />
		<!--最大空闲时间,1小时内未使用则连接被丢弃。若为0则永不丢弃。Default: 0 -->
		<property name="maxIdleTime" value="3600" />
		<!--当连接池中的连接耗尽的时候c3p0一次同时获取的连接数。Default: 3 -->
		<property name="acquireIncrement" value="5" />
		<!--定义在从数据库获取新连接失败后重复尝试的次数。Default: 30 -->
		<property name="acquireRetryAttempts" value="30" />
	</bean>
	<!-- sessionFactory -->
	<bean name="sessionFactory"
		class="org.springframework.orm.hibernate5.LocalSessionFactoryBean">
		<property name="dataSource" ref="dataSource"></property>
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">org.hibernate.dialect.MySQL5Dialect</prop>
				<prop key="hibernate.hbm2ddl.auto">update</prop>
				<prop key="hibernate.show_sql">true</prop>
				<prop key="hibernate.format_sql">true</prop>
			</props>
		</property>
		<!-- hibernate映射文件 -->
		<property name="mappingLocations">
			<list>
				<value>classpath:cn/zzrfdsn/bos1/model/*.xml</value>
			</list>
		</property>
	</bean>
	<!-- 开启spring注解 -->
	<context:annotation-config />
	<!-- 组件扫描 -->
	<context:component-scan
		base-package="cn.zzrfdsn.bos1" />
	<!-- 配置事物核心管理器 -->
	<bean name="transactionManager"
		class="org.springframework.orm.hibernate5.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>
	<!-- 开启注解 -->
	<tx:annotation-driven
		transaction-manager="transactionManager" />

	<!-- 配置webservice -->
	<jaxws:client name="customerService"
		serviceClass="cn.zzrfdsn.webService.customerService.ICustomerService"
		address="http://127.0.0.1/customerService/service/customerService">
	</jaxws:client>

	<!-- 配置缓存管理器 -->
	<bean name="ehCacheManager"
		class="org.apache.shiro.cache.ehcache.EhCacheManager">
		<property name="cacheManagerConfigFile"
			value="classpath:ehcache.xml" />
	</bean>

	<!-- 注册自定义realm -->
	<bean name="realm" class="cn.zzrfdsn.bos1.web.shiro.Bos1Realm" />
	<!-- 配置权限管理器 -->
	<bean name="securityManager"
		class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
		<property name="realm" ref="realm" />
		<property name="cacheManager" ref="ehCacheManager" />
	</bean>

	<!-- 配置shiroFilter -->
	<bean name="shiroFilter"
		class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
		<!-- 权限管理器 -->
		<property name="securityManager" ref="securityManager" />
		<!-- 登录页面 -->
		<property name="loginUrl" value="/login.jsp" />
		<!-- 验证通过跳转页面 -->
		<property name="successUrl" value="/index.jsp" />
		<!-- 权限验证失败跳转页面 -->
		<property name="unauthorizedUrl"
			value="/authenticationFailed.jsp" />
		<!-- 指定url级别拦截规则 -->
		<property name="filterChainDefinitions">
			<value>
				/css/**=anon
				/images/**=anon
				/js/**=anon
				/json/**=anon
				/login.jsp*=anon
				/validatecode.jsp*=anon
				/user/login=anon
				/**=authc
			</value>
		</property>
	</bean>
	<!-- 开启shiro注解 -->
	<bean name="defaultAdvisorAutoProxyCreator"
		class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator">
		<!-- 指定使用cglib代理，默认jdk代理 -->
		<property name="proxyTargetClass" value="true" />
	</bean>
	<!-- 配置shiro框架提供的切面类，用于创建代理对象 -->
	<bean
		class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor" />

	<!-- 定时发送新单邮件提醒任务 -->
	<bean name="mailJob" class="cn.zzrfdsn.bos1.job.MailJob" />

	<bean name="jobDetail"
		class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
		<property name="targetObject" ref="mailJob" />
		<property name="targetMethod" value="execute" />
	</bean>
	<bean name="trigger"
		class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
		<!-- 每天晚上8点 -->
		<!-- 0 0 20 * * ? -->
		<property name="cronExpression" value="0 0 20 * * ?" />
		<property name="jobDetail" ref="jobDetail" />
	</bean>
	<bean name="scheduler"
		class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
		<property name="triggers">
			<list>
				<ref bean="trigger" />
			</list>
		</property>
	</bean>
</beans>
